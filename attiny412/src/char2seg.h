#ifndef _CHAR2SEG_H_

#include <avr/pgmspace.h>
PROGMEM const uint8_t char2seg[]={
//     GFEDCBA
	0b00000000,  // 0x00 NUL
	0b00000000,  // 0x01 SOH
	0b00000000,  // 0x02 STX
	0b00000000,  // 0x03 ETX
	0b00000000,  // 0x04 EOT
	0b00000000,  // 0x05 ENQ
	0b00000000,  // 0x06 ACK
	0b00000000,  // 0x07 BEL
	0b00000000,  // 0x08 BS
	0b00000000,  // 0x09 HT
	0b00000000,  // 0x0a LF*
	0b00000000,  // 0x0b VT
	0b00000000,  // 0x0c FF*
	0b00000000,  // 0x0d CR
	0b00000000,  // 0x0e SO
	0b00000000,  // 0x0f SI
	0b00000000,  // 0x10 DLE
	0b00000000,  // 0x11 DC1
	0b00000000,  // 0x12 DC2
	0b00000000,  // 0x13 DC3
	0b00000000,  // 0x14 DC4
	0b00000000,  // 0x15 NAK
	0b00000000,  // 0x16 SYN
	0b00000000,  // 0x17 ETB
	0b00000000,  // 0x18 CAN
	0b00000000,  // 0x19 EM
	0b00000000,  // 0x1a SUB
	0b00000000,  // 0x1b ESC
	0b00000000,  // 0x1c FS
	0b00000000,  // 0x1d GS
	0b00000000,  // 0x1e RS
	0b00000000,  // 0x1f US
	0b00000000,  // 0x20 SP
	0b00110000,  // 0x21 !
	0b00000000,  // 0x22 "
	0b00000000,  // 0x23 #
	0b00000000,  // 0x24 $
	0b00000000,  // 0x25 %
	0b00000000,  // 0x26 &
	0b00000000,  // 0x27 '
	0b00000000,  // 0x28 (
	0b00000000,  // 0x29 )
	0b00000000,  // 0x2a *
	0b00000000,  // 0x2b +
	0b00000000,  // 0x2c ,
	0b00000000,  // 0x2d -
	0b00000000,  // 0x2e .
	0b00000000,  // 0x2f /
	0b00111111,  // 0x30 0
	0b00000110,  // 0x31 1
	0b01011011,  // 0x32 2
	0b01001111,  // 0x33 3
	0b01100110,  // 0x34 4
	0b01101101,  // 0x35 5
	0b01111101,  // 0x36 6
	0b00000111,  // 0x37 7
	0b01111111,  // 0x38 8
	0b01101111,  // 0x39 9
	0b00000000,  // 0x3a :
	0b00000000,  // 0x3b ;
	0b00000000,  // 0x3c <
	0b00001001,  // 0x3d =
	0b00000000,  // 0x3e >
	0b00000000,  // 0x3f ?
	0b00000000,  // 0x40 @
	0b01110111,  // 0x41 A
	0b01111100,  // 0x42 B
	0b01011000,  // 0x43 C
	0b01011110,  // 0x44 D
	0b01111001,  // 0x45 E
	0b01110001,  // 0x46 F
	0b01101111,  // 0x47 G
	0b01110100,  // 0x48 H
	0b00000110,  // 0x49 I
	0b00001110,  // 0x4a J
	0b01111000,  // 0x4b K
	0b00111000,  // 0x4c L
	0b01010100,  // 0x4d M
	0b01010100,  // 0x4e N
	0b01011100,  // 0x4f O
	0b01110011,  // 0x50 P
	0b01100111,  // 0x51 Q
	0b01010000,  // 0x52 R
	0b01101101,  // 0x53 S
	0b01111000,  // 0x54 T
	0b00111110,  // 0x55 U
	0b00011100,  // 0x56 V
	0b00111110,  // 0x57 W
	0b01110110,  // 0x58 X
	0b01100110,  // 0x59 Y
	0b01011011,  // 0x5a Z
	0b00111001,  // 0x5b [
	0b00000000,  // 0x5c ï½¥
	0b00001111,  // 0x5d ]
	0b00000000,  // 0x5e ^
	0b00000000,  // 0x5f _
	0b00000000,  // 0x60 `
	0b01110111,  // 0x61 a
	0b01111100,  // 0x62 b
	0b01011000,  // 0x63 c
	0b01011110,  // 0x64 d
	0b01111001,  // 0x65 e
	0b01110001,  // 0x66 f
	0b01101111,  // 0x67 g
	0b01110100,  // 0x68 h
	0b00000110,  // 0x69 i
	0b00001110,  // 0x6a j
	0b01111000,  // 0x6b k
	0b00111000,  // 0x6c l
	0b01010100,  // 0x6d m
	0b01010100,  // 0x6e n
	0b01011100,  // 0x6f o
	0b01110011,  // 0x70 p
	0b01100111,  // 0x71 q
	0b01010000,  // 0x72 r
	0b01101101,  // 0x73 s
	0b01111000,  // 0x74 t
	0b00111110,  // 0x75 u
	0b00011100,  // 0x76 v
	0b00111110,  // 0x77 w
	0b01110110,  // 0x78 x
	0b01100110,  // 0x79 y
	0b01011011,  // 0x7a z
	0b00000000,  // 0x7b {
	0b00000000,  // 0x7c |
	0b00000000,  // 0x7d }
	0b00000000,  // 0x7e ~
	0b00000000,  // 0x7f DEL
};

#endif